@use "../../presets" as *;
@use "../../mixins" as *;

.posts {
  @include lg-min {
    padding-top: 100px;
    padding-bottom: 100px;
  }
  @include lg-md {
    padding-top: 80px;
    padding-bottom: 80px;
  }
  @include md {
    padding-top: 60px;
    padding-bottom: 60px;
  }
  & h2 {
    margin-top: 0;

    @include lg-min {
      margin-bottom: 3rem;
    }
    @include lg-md {
      margin-bottom: 2.625rem;
    }
    @include md-sm {
      margin-bottom: 2.25rem;
    }
    @include sm {
      margin-bottom: 2.25rem;

      text-align: center;
    }
  }

  &__container {
    @extend %container;
  }

  &__grid {
    display: grid;

    padding-bottom: $gap;

    gap: $gap;
    @include lg-min {
      grid-template-areas: "p1 p1 p2 p3" "p4 p5 p6 p6";
      grid-template-columns: repeat(4, 1fr);
    }
    @include lg-md {
      grid-template-areas: "p1 p1 p2" "p3 p4 p4" "p5 p5 p6";
      grid-template-columns: repeat(3, 1fr);
    }
    @include md-sm {
      grid-template-areas: "p1 p2" "p3 p4" "p5 p6";
      grid-template-columns: repeat(2, 1fr);
    }
    @include sm {
      grid-template-areas: "p1" "p2" "p3" "p4" "p5" "p6";
    }
  }

  &-item {
    transition: background-color 0.5s;

    background-color: $color-light;

    &__link {
      display: grid;
      overflow: hidden;

      height: 100%;

      grid-template-rows: 300px 1fr;
    }

    &__image {
      display: flex;
      overflow: hidden;
      justify-content: center;

      background-color: $color-primary;

      & img {
        width: 100%;

        transition: transform 0.5s;

        object-fit: cover;
      }
    }

    &__caption {
      display: grid;
      align-content: center;

      padding: $gap;
    }

    &:hover {
      background-color: #d8d8d8;

      & p,
      & h3 {
        color: $color-primary;
      }

      & img {
        transform: scale(1.1);
      }
    }
  }

  &__actions {
    @include sm-min {
      display: flex;
      justify-content: center;
    }
  }
}

$count: 6;

@for $i from 1 through $count {
  .posts-item:nth-of-type(#{$i}) {
    grid-area: p#{$i};
  }
}
